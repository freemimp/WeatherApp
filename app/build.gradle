plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.android.libraries.mapsplatform.secrets-gradle-plugin'
}

android {
    compileSdk compile_sdk

    defaultConfig {
        applicationId "uk.co.freemimp.weatherapp"
        minSdk min_sdk
        targetSdk target_sdk
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "uk.co.freemimp.weatherapp.CustomTestRunner"

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'

        buildConfigField "String", "BASE_URL", project.findProperty("base_url")
        buildConfigField "String", "API_KEY", project.findProperty("api_key")
    }

    buildFeatures {
        viewBinding true
    }

    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }

    buildTypes {
        debug {
            minifyEnabled false
        }
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {

        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
}

dependencies {
    implementation project(":main")
    implementation project(":map")
    implementation project(":data")
    implementation project(":core")
    implementation project(":domain")
    implementation project(":common_test")

    //Android
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.gms:play-services-maps:$google_maps_version"
    implementation "com.google.android.material:material:$android_materia_version"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout_version"
    implementation "androidx.fragment:fragment:$fragment_version"

    //Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    kapt "com.google.dagger:hilt-compiler:$hilt_version"

    // Testing
    androidTestImplementation "androidx.test.ext:junit:$test_ext_junit_version"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core_version"
    androidTestImplementation "io.mockk:mockk-android:$mockk_version"
    androidTestImplementation "androidx.test:runner:$test_core_runner_version"
    androidTestUtil "androidx.test:orchestrator:$test_orchestrator_version"
    androidTestImplementation "androidx.test:core:$test_core_runner_version"
    androidTestImplementation "androidx.test:core-ktx:$test_core_runner_version"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$hilt_version"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestAnnotationProcessor "com.google.dagger:hilt-android-compiler:$hilt_version"
    androidTestImplementation ("com.adevinta.android:barista:$barista_version") {
        exclude group: 'org.jetbrains.kotlin' // Only if you already use Kotlin in your project
    }
}
